rm(list=ls())

#Reading data directly from CSV
air<-read.csv("D:\\NEU\\Data\\Data in excel\\Test\\D1.csv", header=TRUE)

#Understanding the columns
summary(air$ArrDelay)
summary(air$WeatherDelay)
summary(air$NASDelay)
summary(air$Distance)

#Correlation - as a heat map
##colnames(air)
##correlation <- cor(air[,c(2,3,4,5,6,7,8,12,13,14,15,16,19,20,21,25,26,27,2829)],use="complete.obs")
##set.seed(1)
##x <- matrix(rnorm(12), nrow=12, ncol=4)
##y <- matrix(rnorm(12), nrow=12, ncol=3)
###install.packages('corrplot')
###library(corrplot)
###corrplot(correlation)

#Finding the total number of airports
unique(air$Origin)
unique(air$Dest)
unique(air$UniqueCarrier)

#subsetting data
air1<- subset(air,air$Origin == "ATL" | air$Origin == "ORD" |air$Origin == "DFW")
air2<- subset(air1, subset = (air1$UniqueCarrier == "AA" | air1$UniqueCarrier == "DL" |air1$UniqueCarrier == "UA"))
air1<-air2

attach(air1)

#Replacing misisng values
air1$WeatherDelay_re<-ifelse(is.na(WeatherDelay)==TRUE, 0, WeatherDelay)
air1$CarrierDelay_re<-ifelse(is.na(CarrierDelay)==TRUE, 0, CarrierDelay)
air1$NASDelay_re<-ifelse(is.na(NASDelay)==TRUE, 0, NASDelay)
air1$LateAircraftDelay_re<-ifelse(is.na(LateAircraftDelay)==TRUE, 0, LateAircraftDelay)
air1$SecurityDelay_re<-ifelse(is.na(SecurityDelay)==TRUE, 0, SecurityDelay)

#Substituting max delay if flight=cancelled
air1$ArrDelay_re<-ifelse(Cancelled==1, max(ArrDelay, na.rm=TRUE), ArrDelay)
air1<-subset(air1,subset=(Cancelled==0))

#Removing rows where Diverted==1
air1<-subset(air1, subset= (Diverted==0))

summary(ArrDelay)

detach()
attach(air1)
#Checking for Outliers
boxplot(DepTime,CRSDepTime,ArrTime,CRSArrTime,ArrDelay,Distance,ActualElapsedTime,CRSElapsedTime,AirTime,DepDelay,TaxiIn,TaxiOut)

#Did not check for individual delays as they just explain arrival delay

#Checked why outliers for Distance
Check<-air1[Distance>3000,c(24,17,18,19)]
View(Check)
dist_unique<-unique(Check)
dist_unique
#Distance higher for flights to HNL, ogg

#Checkign the reason for outliers for ArrDelay
check1<-air1[is.na(ArrDelay)==FALSE,]
check3<-check1[check1$ArrDelay>800  ,c(15,9,2,17,25:29)]
View(check3)
#Check presentation for conclusions made

#Handling DaysOfWeek categorical variable
air1$Weekend_re<-ifelse((DayOfWeek>=2 & DayOfWeek<=4),0,1) # where 1 is weekend and 0 is weekday

#To check the bad weather months
x1<-aggregate(WeatherDelay_re, list(m=Month), data=air1, mean) 
x1
plot(as.factor(Month), WeatherDelay_re) #confirming using plot
air1$weather_re<-ifelse((air1$Month==12|air1$Month==1|air1$Month==2| air1$Month==7),1,0) # where 1 is extreme weather

#Handling Month column
air1$holiday_re<-ifelse((DayofMonth>=11 & DayofMonth<=17 & Month==2) |
                          (DayofMonth>=15 & DayofMonth<=21 & Month==2) |
                          (DayofMonth>=23 & DayofMonth<=29 & Month==5) |
                          (DayofMonth>=1 & DayofMonth<=7 & Month==7) | 
                          (DayofMonth>=1 & DayofMonth<=4 & Month==9) | 
                          (DayofMonth>=29 & DayofMonth<=31 & Month==8) | 
                          (DayofMonth>=10 & DayofMonth<=16 & Month==10) | 
                          (DayofMonth>=8 & DayofMonth<=14 & Month==11) | 
                          (DayofMonth>=24 & DayofMonth<=30 & Month==11) | 
                          (DayofMonth>=23 & DayofMonth<=31 & Month==12) | 
                          (DayofMonth==1 & Month==1),1,0)


#To find quartiles for ArrDelay where delay>14
x<-air1[air1$ArrDelay>14,  ]
quantile(x$ArrDelay,seq(0,1,by=0.1))

air1$flstatus_re<- ifelse(air1$ArrDelay<15, "On-time", ifelse(air1$ArrDelay<42, "Low-Delay", "High-Delay"))

write.csv(air1,"D:\\NEU\\Data\\Data in excel\\Test\\output.csv")



